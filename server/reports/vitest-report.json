{"numTotalTestSuites":21,"numPassedTestSuites":18,"numFailedTestSuites":3,"numPendingTestSuites":0,"numTotalTests":86,"numPassedTests":81,"numFailedTests":5,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1752524319982,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Auth API","/api/auth/register POST"],"fullName":"Auth API /api/auth/register POST should return 400 for missing name","status":"passed","title":"should return 400 for missing name","duration":69.54849999999988,"failureMessages":[],"location":{"line":27,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/register POST"],"fullName":"Auth API /api/auth/register POST should return 400 for missing email","status":"passed","title":"should return 400 for missing email","duration":13.982200000000375,"failureMessages":[],"location":{"line":42,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/register POST"],"fullName":"Auth API /api/auth/register POST should return 400 for missing password","status":"passed","title":"should return 400 for missing password","duration":9.508600000000115,"failureMessages":[],"location":{"line":57,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/register POST"],"fullName":"Auth API /api/auth/register POST should return 400 for non string name","status":"passed","title":"should return 400 for non string name","duration":14.850799999999708,"failureMessages":[],"location":{"line":72,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/register POST"],"fullName":"Auth API /api/auth/register POST should return 400 for non string email","status":"passed","title":"should return 400 for non string email","duration":17.661099999999806,"failureMessages":[],"location":{"line":88,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/register POST"],"fullName":"Auth API /api/auth/register POST should return 400 for non string password","status":"passed","title":"should return 400 for non string password","duration":28.434099999999944,"failureMessages":[],"location":{"line":104,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/register POST"],"fullName":"Auth API /api/auth/register POST should return 500 for failed email validation","status":"passed","title":"should return 500 for failed email validation","duration":24.343900000000303,"failureMessages":[],"location":{"line":120,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/register POST"],"fullName":"Auth API /api/auth/register POST should return 400 for existing account","status":"passed","title":"should return 400 for existing account","duration":9.285199999999804,"failureMessages":[],"location":{"line":138,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/register POST"],"fullName":"Auth API /api/auth/register POST should return 500 for failed register","status":"passed","title":"should return 500 for failed register","duration":15.678699999999935,"failureMessages":[],"location":{"line":162,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/register POST"],"fullName":"Auth API /api/auth/register POST should return 201 on successful register","status":"passed","title":"should return 201 on successful register","duration":10.676099999999678,"failureMessages":[],"location":{"line":181,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/login POST"],"fullName":"Auth API /api/auth/login POST should return 400 for missing email","status":"passed","title":"should return 400 for missing email","duration":7.55159999999978,"failureMessages":[],"location":{"line":218,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/login POST"],"fullName":"Auth API /api/auth/login POST should return 400 for missing password","status":"passed","title":"should return 400 for missing password","duration":7.123300000000199,"failureMessages":[],"location":{"line":232,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/login POST"],"fullName":"Auth API /api/auth/login POST should return 400 for non string email","status":"passed","title":"should return 400 for non string email","duration":6.146499999999833,"failureMessages":[],"location":{"line":246,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/login POST"],"fullName":"Auth API /api/auth/login POST should return 400 for non string password","status":"passed","title":"should return 400 for non string password","duration":6.9616000000000895,"failureMessages":[],"location":{"line":261,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/login POST"],"fullName":"Auth API /api/auth/login POST should return 401 for bad email","status":"passed","title":"should return 401 for bad email","duration":6.641200000000026,"failureMessages":[],"location":{"line":276,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/login POST"],"fullName":"Auth API /api/auth/login POST should return 401 for unverified email","status":"passed","title":"should return 401 for unverified email","duration":7.5645999999997,"failureMessages":[],"location":{"line":292,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/login POST"],"fullName":"Auth API /api/auth/login POST should return 500 for unknown error during login","status":"passed","title":"should return 500 for unknown error during login","duration":8.98720000000003,"failureMessages":[],"location":{"line":314,"column":5},"meta":{}},{"ancestorTitles":["Auth API","/api/auth/login POST"],"fullName":"Auth API /api/auth/login POST should return 200 with token and user for successful login","status":"passed","title":"should return 200 with token and user for successful login","duration":9.35490000000027,"failureMessages":[],"location":{"line":339,"column":5},"meta":{}}],"startTime":1752524322605,"endTime":1752524322881.355,"status":"passed","message":"","name":"D:/Uni/C455/Project/team10/server/src/tests/integration/auth.test.ts"},{"assertionResults":[{"ancestorTitles":["Chatbot API","/api/chatbot POST"],"fullName":"Chatbot API /api/chatbot POST returns 400 code for missing message","status":"passed","title":"returns 400 code for missing message","duration":42.73079999999982,"failureMessages":[],"location":{"line":35,"column":5},"meta":{}},{"ancestorTitles":["Chatbot API","/api/chatbot POST"],"fullName":"Chatbot API /api/chatbot POST returns 400 code for wrong data type","status":"passed","title":"returns 400 code for wrong data type","duration":5.643399999999929,"failureMessages":[],"location":{"line":44,"column":5},"meta":{}},{"ancestorTitles":["Chatbot API","/api/chatbot POST"],"fullName":"Chatbot API /api/chatbot POST returns 400 code for empty message","status":"passed","title":"returns 400 code for empty message","duration":5.105399999999918,"failureMessages":[],"location":{"line":53,"column":5},"meta":{}},{"ancestorTitles":["Chatbot API","/api/chatbot POST"],"fullName":"Chatbot API /api/chatbot POST returns 500 code for failed chatbot API call","status":"failed","title":"returns 500 code for failed chatbot API call","duration":7.407400000000052,"failureMessages":["Error: expected 500 \"Internal Server Error\", got 401 \"Unauthorized\"\n    at D:\\Uni\\C455\\Project\\team10\\server\\src\\tests\\integration\\chatbot.test.ts:67:10\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n----\n    at Test._assertStatus (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:309:14)\n    at D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:365:13\n    at Test._assertFunction (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:342:13)\n    at Test.assert (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:195:23)\n    at localAssert (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:138:14)\n    at Server.<anonymous> (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:152:11)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2419:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"location":{"line":62,"column":5},"meta":{}},{"ancestorTitles":["Chatbot API","/api/chatbot POST"],"fullName":"Chatbot API /api/chatbot POST returns 500 code for incomplete chatbot response","status":"failed","title":"returns 500 code for incomplete chatbot response","duration":5.266100000000279,"failureMessages":["Error: expected 500 \"Internal Server Error\", got 401 \"Unauthorized\"\n    at D:\\Uni\\C455\\Project\\team10\\server\\src\\tests\\integration\\chatbot.test.ts:82:10\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n----\n    at Test._assertStatus (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:309:14)\n    at D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:365:13\n    at Test._assertFunction (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:342:13)\n    at Test.assert (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:195:23)\n    at localAssert (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:138:14)\n    at Server.<anonymous> (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:152:11)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2419:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"location":{"line":72,"column":5},"meta":{}},{"ancestorTitles":["Chatbot API","/api/chatbot POST"],"fullName":"Chatbot API /api/chatbot POST returns 200 code for working chatbot API without products","status":"failed","title":"returns 200 code for working chatbot API without products","duration":5.286000000000058,"failureMessages":["Error: expected 200 \"OK\", got 401 \"Unauthorized\"\n    at D:\\Uni\\C455\\Project\\team10\\server\\src\\tests\\integration\\chatbot.test.ts:96:10\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n----\n    at Test._assertStatus (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:309:14)\n    at D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:365:13\n    at Test._assertFunction (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:342:13)\n    at Test.assert (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:195:23)\n    at localAssert (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:138:14)\n    at Server.<anonymous> (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:152:11)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2419:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"location":{"line":87,"column":5},"meta":{}},{"ancestorTitles":["Chatbot API","/api/chatbot POST"],"fullName":"Chatbot API /api/chatbot POST returns 200 code for working chatbot API and failed product API","status":"failed","title":"returns 200 code for working chatbot API and failed product API","duration":4.557800000000043,"failureMessages":["Error: expected 200 \"OK\", got 401 \"Unauthorized\"\n    at D:\\Uni\\C455\\Project\\team10\\server\\src\\tests\\integration\\chatbot.test.ts:115:10\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n----\n    at Test._assertStatus (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:309:14)\n    at D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:365:13\n    at Test._assertFunction (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:342:13)\n    at Test.assert (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:195:23)\n    at localAssert (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:138:14)\n    at Server.<anonymous> (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:152:11)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2419:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"location":{"line":104,"column":5},"meta":{}},{"ancestorTitles":["Chatbot API","/api/chatbot POST"],"fullName":"Chatbot API /api/chatbot POST returns 200 code for working chatbot API and product API","status":"failed","title":"returns 200 code for working chatbot API and product API","duration":4.429399999999987,"failureMessages":["Error: expected 200 \"OK\", got 401 \"Unauthorized\"\n    at D:\\Uni\\C455\\Project\\team10\\server\\src\\tests\\integration\\chatbot.test.ts:144:10\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///D:/Uni/C455/Project/team10/server/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n----\n    at Test._assertStatus (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:309:14)\n    at D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:365:13\n    at Test._assertFunction (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:342:13)\n    at Test.assert (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:195:23)\n    at localAssert (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:138:14)\n    at Server.<anonymous> (D:\\Uni\\C455\\Project\\team10\\server\\node_modules\\supertest\\lib\\test.js:152:11)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2419:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"location":{"line":123,"column":5},"meta":{}}],"startTime":1752524323647,"endTime":1752524323727.4294,"status":"failed","message":"","name":"D:/Uni/C455/Project/team10/server/src/tests/integration/chatbot.test.ts"},{"assertionResults":[{"ancestorTitles":["Chat API","/api/chats POST"],"fullName":"Chat API /api/chats POST should return 400 for missing messages","status":"passed","title":"should return 400 for missing messages","duration":74.17329999999993,"failureMessages":[],"location":{"line":25,"column":5},"meta":{}},{"ancestorTitles":["Chat API","/api/chats POST"],"fullName":"Chat API /api/chats POST should return 400 for missing email","status":"passed","title":"should return 400 for missing email","duration":14.144400000000132,"failureMessages":[],"location":{"line":39,"column":5},"meta":{}},{"ancestorTitles":["Chat API","/api/chats POST"],"fullName":"Chat API /api/chats POST should return 400 for non string email","status":"passed","title":"should return 400 for non string email","duration":12.17450000000008,"failureMessages":[],"location":{"line":62,"column":5},"meta":{}},{"ancestorTitles":["Chat API","/api/chats POST"],"fullName":"Chat API /api/chats POST should return 400 for non array messages","status":"passed","title":"should return 400 for non array messages","duration":13.576800000000276,"failureMessages":[],"location":{"line":86,"column":5},"meta":{}},{"ancestorTitles":["Chat API","/api/chats POST"],"fullName":"Chat API /api/chats POST should return 400 for missing text in messages","status":"passed","title":"should return 400 for missing text in messages","duration":12.891399999999976,"failureMessages":[],"location":{"line":101,"column":5},"meta":{}},{"ancestorTitles":["Chat API","/api/chats POST"],"fullName":"Chat API /api/chats POST should return 400 for missing speaker in messages","status":"passed","title":"should return 400 for missing speaker in messages","duration":9.152100000000246,"failureMessages":[],"location":{"line":124,"column":5},"meta":{}},{"ancestorTitles":["Chat API","/api/chats POST"],"fullName":"Chat API /api/chats POST should return 400 for invalid speaker in messages","status":"passed","title":"should return 400 for invalid speaker in messages","duration":8.202500000000327,"failureMessages":[],"location":{"line":147,"column":5},"meta":{}},{"ancestorTitles":["Chat API","/api/chats POST"],"fullName":"Chat API /api/chats POST should return 400 for non string text in messages","status":"passed","title":"should return 400 for non string text in messages","duration":7.6512000000002445,"failureMessages":[],"location":{"line":171,"column":5},"meta":{}},{"ancestorTitles":["Chat API","/api/chats POST"],"fullName":"Chat API /api/chats POST should return 500 for failed save chat","status":"passed","title":"should return 500 for failed save chat","duration":22.08750000000009,"failureMessages":[],"location":{"line":195,"column":5},"meta":{}},{"ancestorTitles":["Chat API","/api/chats POST"],"fullName":"Chat API /api/chats POST should return 201 for working save chat","status":"passed","title":"should return 201 for working save chat","duration":16.122400000000198,"failureMessages":[],"location":{"line":220,"column":5},"meta":{}},{"ancestorTitles":["Chat API","/api/chats GET"],"fullName":"Chat API /api/chats GET should return 400 for missing email on query params","status":"passed","title":"should return 400 for missing email on query params","duration":17.534400000000005,"failureMessages":[],"location":{"line":255,"column":5},"meta":{}},{"ancestorTitles":["Chat API","/api/chats GET"],"fullName":"Chat API /api/chats GET should return 500 for unknown error during fetch","status":"passed","title":"should return 500 for unknown error during fetch","duration":14.220299999999952,"failureMessages":[],"location":{"line":266,"column":5},"meta":{}},{"ancestorTitles":["Chat API","/api/chats GET"],"fullName":"Chat API /api/chats GET should return 200 for successful fetch","status":"passed","title":"should return 200 for successful fetch","duration":10.345899999999801,"failureMessages":[],"location":{"line":278,"column":5},"meta":{}}],"startTime":1752524322428,"endTime":1752524322661.346,"status":"passed","message":"","name":"D:/Uni/C455/Project/team10/server/src/tests/integration/chats.test.ts"},{"assertionResults":[{"ancestorTitles":["Products API","GET /api/products/search"],"fullName":"Products API GET /api/products/search should return 200 and products for a valid search query","status":"passed","title":"should return 200 and products for a valid search query","duration":77.10510000000022,"failureMessages":[],"location":{"line":21,"column":5},"meta":{}},{"ancestorTitles":["Products API","GET /api/products/search"],"fullName":"Products API GET /api/products/search should return 400 if the search query is missing","status":"passed","title":"should return 400 if the search query is missing","duration":14.48259999999982,"failureMessages":[],"location":{"line":66,"column":5},"meta":{}},{"ancestorTitles":["Products API","GET /api/products/search"],"fullName":"Products API GET /api/products/search should return 500 if the ProductService throws an error","status":"passed","title":"should return 500 if the ProductService throws an error","duration":16.728099999999813,"failureMessages":[],"location":{"line":74,"column":5},"meta":{}}],"startTime":1752524322344,"endTime":1752524322451.728,"status":"passed","message":"","name":"D:/Uni/C455/Project/team10/server/src/tests/integration/products.test.ts"},{"assertionResults":[{"ancestorTitles":["Profile API","/api/profiles/verify/:token GET"],"fullName":"Profile API /api/profiles/verify/:token GET should return 400 for missing token","status":"passed","title":"should return 400 for missing token","duration":56.77549999999974,"failureMessages":[],"location":{"line":27,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/verify/:token GET"],"fullName":"Profile API /api/profiles/verify/:token GET should return 500 for failing to get user","status":"passed","title":"should return 500 for failing to get user","duration":33.589800000000196,"failureMessages":[],"location":{"line":39,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/verify/:token GET"],"fullName":"Profile API /api/profiles/verify/:token GET should return 404 for not finding valid user","status":"passed","title":"should return 404 for not finding valid user","duration":12.443500000000313,"failureMessages":[],"location":{"line":52,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/verify/:token GET"],"fullName":"Profile API /api/profiles/verify/:token GET should return 500 for failing to verify email","status":"passed","title":"should return 500 for failing to verify email","duration":10.021299999999883,"failureMessages":[],"location":{"line":65,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/verify/:token GET"],"fullName":"Profile API /api/profiles/verify/:token GET should return 200 for successfully verifying email","status":"passed","title":"should return 200 for successfully verifying email","duration":10.010800000000017,"failureMessages":[],"location":{"line":89,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/resend-verification POST"],"fullName":"Profile API /api/profiles/resend-verification POST should return 400 for missing email","status":"passed","title":"should return 400 for missing email","duration":25.052099999999882,"failureMessages":[],"location":{"line":115,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/resend-verification POST"],"fullName":"Profile API /api/profiles/resend-verification POST should return 400 for non string email","status":"passed","title":"should return 400 for non string email","duration":8.392199999999775,"failureMessages":[],"location":{"line":127,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/resend-verification POST"],"fullName":"Profile API /api/profiles/resend-verification POST should return 500 for unknown error while getting user","status":"passed","title":"should return 500 for unknown error while getting user","duration":8.166999999999916,"failureMessages":[],"location":{"line":139,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/resend-verification POST"],"fullName":"Profile API /api/profiles/resend-verification POST should return 404 for unknown user","status":"passed","title":"should return 404 for unknown user","duration":18.21259999999984,"failureMessages":[],"location":{"line":153,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/resend-verification POST"],"fullName":"Profile API /api/profiles/resend-verification POST should return 400 for user with verified email","status":"passed","title":"should return 400 for user with verified email","duration":14.183399999999892,"failureMessages":[],"location":{"line":167,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/resend-verification POST"],"fullName":"Profile API /api/profiles/resend-verification POST should return 500 for unknown error during resending verification email","status":"passed","title":"should return 500 for unknown error during resending verification email","duration":7.762200000000121,"failureMessages":[],"location":{"line":188,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/resend-verification POST"],"fullName":"Profile API /api/profiles/resend-verification POST should return 200 for successfully resending email","status":"passed","title":"should return 200 for successfully resending email","duration":11.521999999999935,"failureMessages":[],"location":{"line":210,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId GET"],"fullName":"Profile API /api/profiles/:userId GET should return 401 for no auth token on header","status":"passed","title":"should return 401 for no auth token on header","duration":11.188000000000102,"failureMessages":[],"location":{"line":251,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId GET"],"fullName":"Profile API /api/profiles/:userId GET should return 500 for unconfigured JWT","status":"passed","title":"should return 500 for unconfigured JWT","duration":14.858200000000124,"failureMessages":[],"location":{"line":262,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId GET"],"fullName":"Profile API /api/profiles/:userId GET should return 401 for JWT verification error","status":"passed","title":"should return 401 for JWT verification error","duration":10.974999999999909,"failureMessages":[],"location":{"line":275,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId GET"],"fullName":"Profile API /api/profiles/:userId GET should return 500 for unknown error JWT","status":"passed","title":"should return 500 for unknown error JWT","duration":10.087099999999737,"failureMessages":[],"location":{"line":289,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId GET"],"fullName":"Profile API /api/profiles/:userId GET should return 400 for missing userId on params","status":"passed","title":"should return 400 for missing userId on params","duration":7.378999999999905,"failureMessages":[],"location":{"line":303,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId GET"],"fullName":"Profile API /api/profiles/:userId GET should return 500 for error during getting profile","status":"passed","title":"should return 500 for error during getting profile","duration":7.3429000000001,"failureMessages":[],"location":{"line":317,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId GET"],"fullName":"Profile API /api/profiles/:userId GET should return 404 for missing profile for userId","status":"passed","title":"should return 404 for missing profile for userId","duration":5.730999999999767,"failureMessages":[],"location":{"line":332,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId GET"],"fullName":"Profile API /api/profiles/:userId GET should return 200 for successfully getting profile","status":"passed","title":"should return 200 for successfully getting profile","duration":5.573100000000068,"failureMessages":[],"location":{"line":347,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId PATCH"],"fullName":"Profile API /api/profiles/:userId PATCH should return 401 for no auth token on header","status":"passed","title":"should return 401 for no auth token on header","duration":4.3047999999998865,"failureMessages":[],"location":{"line":403,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId PATCH"],"fullName":"Profile API /api/profiles/:userId PATCH should return 500 for unconfigured JWT","status":"passed","title":"should return 500 for unconfigured JWT","duration":4.902299999999741,"failureMessages":[],"location":{"line":414,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId PATCH"],"fullName":"Profile API /api/profiles/:userId PATCH should return 401 for JWT verification error","status":"passed","title":"should return 401 for JWT verification error","duration":5.327400000000125,"failureMessages":[],"location":{"line":427,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId PATCH"],"fullName":"Profile API /api/profiles/:userId PATCH should return 500 for unknown error JWT","status":"passed","title":"should return 500 for unknown error JWT","duration":5.584600000000137,"failureMessages":[],"location":{"line":441,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId PATCH"],"fullName":"Profile API /api/profiles/:userId PATCH should return 400 for missing userId on params","status":"passed","title":"should return 400 for missing userId on params","duration":6.539800000000014,"failureMessages":[],"location":{"line":455,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId PATCH"],"fullName":"Profile API /api/profiles/:userId PATCH should return 400 for missing profileData in body","status":"passed","title":"should return 400 for missing profileData in body","duration":13.552200000000084,"failureMessages":[],"location":{"line":469,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId PATCH"],"fullName":"Profile API /api/profiles/:userId PATCH should return 500 for error during getting profile","status":"passed","title":"should return 500 for error during getting profile","duration":11.386499999999614,"failureMessages":[],"location":{"line":484,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId PATCH"],"fullName":"Profile API /api/profiles/:userId PATCH should return 404 for missing profile for userId","status":"passed","title":"should return 404 for missing profile for userId","duration":10.275800000000345,"failureMessages":[],"location":{"line":522,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId PATCH"],"fullName":"Profile API /api/profiles/:userId PATCH should return 500 for error with updating profile","status":"passed","title":"should return 500 for error with updating profile","duration":10.289900000000216,"failureMessages":[],"location":{"line":560,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/:userId PATCH"],"fullName":"Profile API /api/profiles/:userId PATCH should return 200 for successfully updating profile","status":"passed","title":"should return 200 for successfully updating profile","duration":9.021699999999782,"failureMessages":[],"location":{"line":620,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 401 for no auth token on header","status":"passed","title":"should return 401 for no auth token on header","duration":8.134599999999864,"failureMessages":[],"location":{"line":700,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 500 for unconfigured JWT","status":"passed","title":"should return 500 for unconfigured JWT","duration":7.116599999999835,"failureMessages":[],"location":{"line":711,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 401 for JWT verification error","status":"passed","title":"should return 401 for JWT verification error","duration":6.940000000000055,"failureMessages":[],"location":{"line":724,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 500 for unknown error JWT","status":"passed","title":"should return 500 for unknown error JWT","duration":5.852900000000318,"failureMessages":[],"location":{"line":738,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 400 for userId missing from params","status":"passed","title":"should return 400 for userId missing from params","duration":8.257800000000316,"failureMessages":[],"location":{"line":752,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 400 for missing newPassword","status":"passed","title":"should return 400 for missing newPassword","duration":9.943299999999908,"failureMessages":[],"location":{"line":764,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 400 for missing currentPassword","status":"passed","title":"should return 400 for missing currentPassword","duration":5.958499999999731,"failureMessages":[],"location":{"line":779,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 400 for non string currentPassword","status":"passed","title":"should return 400 for non string currentPassword","duration":6.89429999999993,"failureMessages":[],"location":{"line":794,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 400 for non string currentPassword","status":"passed","title":"should return 400 for non string currentPassword","duration":9.244799999999941,"failureMessages":[],"location":{"line":810,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 500 for unknown error during getting user","status":"passed","title":"should return 500 for unknown error during getting user","duration":10.053200000000288,"failureMessages":[],"location":{"line":826,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 404 for unknown user","status":"passed","title":"should return 404 for unknown user","duration":9.58030000000008,"failureMessages":[],"location":{"line":843,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 401 for invalid currentPassword","status":"passed","title":"should return 401 for invalid currentPassword","duration":9.25019999999995,"failureMessages":[],"location":{"line":860,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 500 for failed password update","status":"passed","title":"should return 500 for failed password update","duration":7.831499999999778,"failureMessages":[],"location":{"line":890,"column":5},"meta":{}},{"ancestorTitles":["Profile API","/api/profiles/passwords/:userId"],"fullName":"Profile API /api/profiles/passwords/:userId should return 200 for successful password update","status":"passed","title":"should return 200 for successful password update","duration":5.65729999999985,"failureMessages":[],"location":{"line":921,"column":5},"meta":{}}],"startTime":1752524322695,"endTime":1752524323178.6572,"status":"passed","message":"","name":"D:/Uni/C455/Project/team10/server/src/tests/integration/profile.test.ts"}]}